{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","$onInit","daysInMonth","dow","weekDays","concat","weekdaysMin","slice","$watch","unix","newValue","oldValue","updateDaysInMonth","getDaysInMonth","days","firstDay","day","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","formatValidator","format","isDate","compareDateValidator","otherDate","comparator","minDateValidator","d","md","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","TimePickerCtrl","time","autoSwitch","ampm","VIEW_HOURS","VIEW_MINUTES","currentView","hoursFormat","minutesFormat","clockHours","parseInt","clockMinutes","switchView","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","minutes","type","f","t","selected","getPointerStyle","divider","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","compareTimeValidator","otherTime","minTimeValidator","minTime","mt","maxTimeValidator","maxTime","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","factory","$mdpLocale","okLabel","cancelLabel","timeFormat","noFloat","openOnClick","clearOnCancel","dateFormat","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","PARENT_GETTER","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","datePicker","Date","now","isObject","labelOk","labelCancel","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","multiple","parent","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","raised","direction","addClass","removeClass","$mdpDatePicker","require","transclude","isDefined","mdpNoFloat","mdpOpenOnClick","mdpDisabled","placeholder","disabled","inputName","pre","constollers","$transclude","post","controllers","updateInputElement","inputElement","inputContainerCtrl","setHasValue","ngModel","$isEmpty","updateDate","strValue","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","event","target","$viewVaue","form","opts","clone","append","model","isError","$invalid","$submitted","required","$formatters","unshift","strVal","$validators","modelValue","viewValue","isUndefined","$parsers","parsed","$modelValue","originalModel","month","clearDate","showPicker","ev","error","on","$on","off","$validate","replace","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","e","timePicker","$mdpTimePicker","updateTime","undefined","$error","setInvalid","Object","keys","seconds"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n    \"ngMaterial\",\n    \"ngAnimate\",\n    \"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $mdIconProvider.icon(icon.id, icon.url);\n    });\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $templateCache.put(icon.url, icon.svg);\n    });\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'clear',\n        url: 'clear.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\n/**\n * Created by Robin Thoni on 6/21/17.\n */\n\nmodule.factory('$mdpLocale', [function () {\n    var $mdpLocale = {\n        time: {\n            minTime: null,\n            maxTime: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            timeFormat: \"HH:mm\",\n            noFloat: false,\n            openOnClick: false,\n            autoSwitch: false,\n            ampm: true,\n            clearOnCancel: false\n        },\n        date: {\n            minDate: null,\n            maxDate: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            dateFilter: null,\n            dateFormat: \"YYYY-MM-DD\",\n            displayFormat: \"ddd, MMM DD\",\n            noFloat: false,\n            openOnClick: false,\n            clearOnCancel: false\n        }\n    };\n\n    return $mdpLocale;\n}]);\n\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n\n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n\n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n\n            return {};\n        }\n    }\n\n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    // validate min and max date\n    if (this.minDate && this.maxDate) {\n        if (this.maxDate.isBefore(this.minDate)) {\n            this.maxDate = moment(this.minDate).add(1, 'days');\n        }\n    }\n\n    if (this.date) {\n        // check min date\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            this.date = moment(this.minDate);\n        }\n\n        // check max date\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            this.date = moment(this.maxDate);\n        }\n    }\n\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n            return this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n    this.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        var date = this.date;\n\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            date = moment(this.minDate);\n        }\n\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            date = moment(this.maxDate);\n        }\n\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options.displayFormat = options.displayFormat || $mdpLocale.date.displayFormat || DISPLAY_FORMAT;\n\n            var labelOk = options.okLabel || $mdpLocale.date.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.date.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' +\n\n                                '</div>' +\n\n                                '<div>' +\n\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    var self = this;\n\n    this.$onInit = function () {\n        self.daysInMonth = [];\n        self.dow = 1;\n        self.weekDays = [].concat(\n            moment.weekdaysMin().slice(self.dow),\n            moment.weekdaysMin().slice(0, self.dow)\n        );\n        $scope.$watch(function () {\n            return self.date.unix()\n        }, function (newValue, oldValue) {\n            if (newValue && newValue !== oldValue)\n                self.updateDaysInMonth();\n        });\n        self.updateDaysInMonth();\n    };\n\n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n\n            (!this.maxDate || this.maxDate >= day) &&\n\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    });\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button\" aria-label=\"Select day\" ng-mouseenter=\"raised = true\" ng-mouseleave=\"raised = false\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value, \\'md-raised\\': raised || calendar.date.date() == day.value }\" ng-dblclick=\"datepicker.confirm()\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n\n            });\n\n            scope.raised = false;\n\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction compareDateValidator(value, format, otherDate, comparator) {\n    // take only the date part, not the time part\n    if (angular.isDate(otherDate)) {\n        otherDate = moment(otherDate).format(format);\n    }\n    otherDate = moment(otherDate, format, true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !otherDate.isValid() ||\n            comparator(date, otherDate);\n}\n\nfunction minDateValidator(value, format, minDate) {\n    return compareDateValidator(value, format, minDate, function(d, md) { return d.isSameOrAfter(md); });\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    return compareDateValidator(value, format, maxDate, function(d, md) { return d.isSameOrBefore(md); });\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !angular.isFunction(filter) ||\n            !filter(date.toDate());\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", \"$mdpLocale\", function($mdpDatePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.date.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.date.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                        '<md-button class=\"md-icon-button clear-button\" ng-if=\"model.$viewValue\" ng-click=\"clearDate()\"><md-icon md-svg-icon=\"clear\"></md-icon></md-button>' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\"\n        },\n        link: {\n            pre: function(scope, element, attrs, constollers, $transclude) {\n\n            },\n            post: function(scope, element, attrs, controllers, $transclude) {\n                var ngModel = controllers[0];\n                var form = controllers[1];\n\n                var opts = {\n                    get minDate() {\n                        return scope.minDate || $mdpLocale.date.minDate;\n                    },\n                    get maxDate() {\n                        return scope.maxDate || $mdpLocale.date.maxDate;\n                    },\n                    get dateFilter() {\n                        return scope.dateFilter || $mdpLocale.date.dateFilter;\n                    },\n                    get clearOnCancel() {\n                        return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.date.clearOnCancel;\n                    }\n                };\n\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                    inputContainer.append(clone);\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n                scope.type = scope.dateFormat || $mdpLocale.date.dateFormat ? \"text\" : \"date\";\n                scope.dateFormat = scope.dateFormat || $mdpLocale.date.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n\n                scope.isError = function() {\n                    return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n                };\n\n                scope.required = function() {\n                    return !!attrs.required;\n                };\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid()) {\n                        var strVal = date.format(scope.dateFormat);\n                        updateInputElement(strVal);\n                        return strVal;\n                    } else {\n                        updateInputElement(null);\n                        return null;\n                    }\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, opts.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, opts.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, opts.dateFilter);\n                };\n\n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n                        return parsed.toDate();\n\n                    } else\n                        return null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n\n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n\n                    if(!ngModel.$pristine &&\n\n                        messages.hasClass(\"md-auto-hide\") &&\n\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                }\n\n                scope.clearDate = function() {\n                    updateDate(null, true);\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                        minDate: opts.minDate,\n                        maxDate: opts.maxDate,\n                        dateFilter: opts.dateFilter,\n                        okLabel: scope.okLabel,\n                        cancelLabel: scope.cancelLabel,\n                        targetEvent: ev\n                    }).then(function(time) {\n                        updateDate(time, true);\n                    }, function (error) {\n                        if (opts.clearOnCancel) {\n                            updateDate(null, true);\n                        }\n                    });\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n\n                inputElement.on(\"reset input blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n\n                // revalidate on constraint change\n                scope.$watch(\"minDate + maxDate\", function() {\n                    ngModel.$validate();\n                });\n            }\n        }\n    };\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n                    minDate: scope.minDate,\n                    maxDate: scope.maxDate,\n                    dateFilter: scope.dateFilter,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    targetEvent: ev\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, ampm, $mdMedia) {\n    var self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    this.ampm = !!ampm;\n\n    this.hoursFormat = self.ampm ? \"h\" : \"H\";\n    this.minutesFormat = \"mm\";\n\n    this.clockHours = parseInt(this.time.format(this.hoursFormat));\n    this.clockMinutes = parseInt(this.time.format(this.minutesFormat));\n\n    $scope.$mdMedia = $mdMedia;\n\n    this.switchView = function() {\n        self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n    };\n\n    this.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n    };\n\n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var self = this;\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n\n    this.$onInit = function () {\n        self.STEP_DEG = 360 / 12;\n        self.steps = [];\n        this.CLOCK_TYPES = {\n            \"hours\": {\n                range: self.ampm ? 12 : 24,\n            },\n            \"minutes\": {\n                range: 60,\n            }\n        };\n        self.type = self.type || \"hours\";\n\n        switch (self.type) {\n            case TYPE_HOURS:\n                var f = self.ampm ? 1 : 2;\n                var t = self.ampm ? 12 : 23;\n                for(var i = f; i <= t; i+=f)\n                    self.steps.push(i);\n                if (!self.ampm) self.steps.push(0);\n                self.selected = self.time.hours() || 0;\n                if(self.ampm && self.selected > 12) self.selected -= 12;\n\n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n\n                break;\n        }\n    };\n\n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        switch(self.type) {\n            case TYPE_HOURS:\n                var divider = self.ampm ? 12 : 24;\n\n                self.setTime(Math.round(divider / 360 * deg));\n                break;\n            case TYPE_MINUTES:\n                self.setTime(Math.round(Math.round(deg / 6) / 5) * 5);\n                break;\n        }\n\n    };\n\n    this.setTime = function(time, type) {\n        this.selected = time;\n\n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.ampm && self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n\n    };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?',\n            'ampm': '=?'\n        },\n        replace: true,\n        template: '<md-card class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step || (step == clock.steps[clock.steps.length - 1] && clock.selected == 0), \\'md-raised\\': raised || clock.selected == step  }\" ng-mouseenter=\"raised = true\" ng-mouseleave=\"raised = false\" class=\"md-icon-button mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</md-card>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n\t\t\t\ttimepickerCtrl = scope.$parent.timepicker;\n\t\t\t\t\n            scope.raised = false;\n\n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            var labelOk = options.okLabel || $mdpLocale.time.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.time.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', 'ampm', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(timepicker.hoursFormat) }}</span>:' +\n\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(timepicker.minutesFormat) }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" ng-show=\"timepicker.ampm\" class=\"mdp-timepicker-selected-ampm\">' +\n\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' +\n\n                                '</md-toolbar>' +\n                                '<md-content>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</md-content>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    ampm: angular.isDefined(options.ampm) ? options.ampm : $mdpLocale.time.ampm\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return timePicker;\n    }];\n});\n\nfunction compareTimeValidator(value, format, otherTime, comparator) {\n    // take only the date part, not the time part\n    if (angular.isDate(otherTime)) {\n        otherTime = moment(otherTime).format(format);\n    }\n    otherTime = moment(otherTime, format, true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !otherTime.isValid() ||\n            comparator(date, otherTime);\n}\n\nfunction minTimeValidator(value, format, minTime) {\n    return compareTimeValidator(value, format, minTime, function(t, mt) { return t.isSameOrAfter(mt); });\n}\n\nfunction maxTimeValidator(value, format, maxTime) {\n    return compareTimeValidator(value, format, maxTime, function(t, mt) { return t.isSameOrBefore(mt); });\n}\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", \"$mdpLocale\", function($mdpTimePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.time.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.time.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minTime\": \"=?mdpMinTime\",\n            \"maxTime\": \"=?mdpMaxTime\",\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"ampm\": \"=?mdpAmpm\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\"\n        },\n        link: function(scope, element, attrs, controllers, $transclude) {\n            var ngModel = controllers[0];\n            var form = controllers[1];\n\n            var opts = {\n                get minTime() {\n                    return scope.minTime || $mdpLocale.time.minTime;\n                },\n                get maxTime() {\n                    return scope.maxTime || $mdpLocale.time.maxTime;\n                },\n                get clearOnCancel() {\n                    return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.time.clearOnCancel;\n                }\n            };\n\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function(clone) {\n                inputContainer.append(clone);\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n            scope.type = scope.timeFormat || $mdpLocale.time.timeFormat ? \"text\" : \"time\";\n            scope.timeFormat = scope.timeFormat || $mdpLocale.time.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch === undefined ? $mdpLocale.time.autoSwitch : scope.autoSwitch;\n            scope.model = ngModel;\n\n            scope.isError = function() {\n                return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n            };\n\n            scope.required = function() {\n                return !!attrs.required;\n            };\n\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) {\n                    var strVal = time.format(scope.timeFormat);\n                    updateInputElement(strVal);\n                    return strVal;\n                } else {\n                    updateInputElement(null);\n                    return null;\n                }\n            });\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n\n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$validators.minTime = function(modelValue, viewValue) {\n                return minTimeValidator(viewValue, scope.timeFormat, opts.minTime);\n            };\n\n            ngModel.$validators.maxTime = function(modelValue, viewValue) {\n                return maxTimeValidator(viewValue, scope.timeFormat, opts.maxTime);\n            };\n\n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n\n                        parsed = originalModel;\n                    }\n                    return parsed.toDate();\n\n                } else\n                    return null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n\n                if(!ngModel.$pristine &&\n\n                    messages.hasClass(\"md-auto-hide\") &&\n\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n            }\n\n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    autoSwitch: scope.autoSwitch,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    updateTime(time, true);\n                }, function (error) {\n                    if (opts.clearOnCancel) {\n                        updateTime(null, true);\n                    }\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n\n            inputElement.on(\"reset input blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            });\n\n            // revalidate on constraint change\n            scope.$watch(\"minTime + maxTime\", function() {\n                ngModel.$validate();\n            });\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"]}